# Generated by Django 4.0.2 on 2022-05-03 20:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abilities',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'abilities',
            },
        ),
        migrations.CreateModel(
            name='Heroes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('localized_name', models.TextField()),
            ],
            options={
                'db_table': 'heroes',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('start_time', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('tower_status_radiant', models.IntegerField()),
                ('tower_status_dire', models.IntegerField()),
                ('barracks_status_radiant', models.IntegerField()),
                ('barracks_status_dire', models.IntegerField()),
                ('first_blood_time', models.IntegerField()),
                ('game_mode', models.IntegerField()),
                ('radiant_win', models.BooleanField()),
                ('negative_votes', models.IntegerField()),
                ('positive_votes', models.IntegerField()),
            ],
            options={
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='MP_details',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('player_slot', models.IntegerField()),
                ('gold', models.IntegerField()),
                ('gold_spent', models.IntegerField()),
                ('gold_per_min', models.IntegerField()),
                ('xp_per_min', models.IntegerField()),
                ('kills', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('denies', models.IntegerField()),
                ('last_hits', models.IntegerField()),
                ('stuns', models.IntegerField()),
                ('hero_damage', models.IntegerField()),
                ('level', models.IntegerField()),
                ('leaver_status', models.IntegerField()),
                ('xp_hero', models.IntegerField()),
                ('xp_creep', models.IntegerField()),
                ('xp_roshan', models.IntegerField()),
                ('xp_other', models.IntegerField()),
                ('gold_other', models.IntegerField()),
                ('gold_death', models.IntegerField()),
                ('gold_buyback', models.IntegerField()),
                ('gold_abandon', models.IntegerField()),
                ('gold_sell', models.IntegerField()),
                ('gold_destroying_structure', models.IntegerField()),
                ('gold_killing_heroes', models.IntegerField()),
                ('gold_killing_creeps', models.IntegerField()),
                ('gold_killing_roshan', models.IntegerField()),
                ('gold_killing_couriers', models.IntegerField()),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.heroes')),
                ('item_1', models.ForeignKey(db_column='item_id_1', on_delete=django.db.models.deletion.CASCADE, related_name='item1', to='api_v4.items')),
                ('item_2', models.ForeignKey(db_column='item_id_2', on_delete=django.db.models.deletion.CASCADE, related_name='item2', to='api_v4.items')),
                ('item_3', models.ForeignKey(db_column='item_id_3', on_delete=django.db.models.deletion.CASCADE, related_name='item3', to='api_v4.items')),
                ('item_4', models.ForeignKey(db_column='item_id_4', on_delete=django.db.models.deletion.CASCADE, related_name='item4', to='api_v4.items')),
                ('item_5', models.ForeignKey(db_column='item_id_5', on_delete=django.db.models.deletion.CASCADE, related_name='item5', to='api_v4.items')),
                ('item_6', models.ForeignKey(db_column='item_id_6', on_delete=django.db.models.deletion.CASCADE, related_name='item6', to='api_v4.items')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.matches')),
            ],
            options={
                'db_table': 'matches_players_details',
            },
        ),
        migrations.CreateModel(
            name='Patches',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('release_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'patches',
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('nick', models.TextField()),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'cluster_regions',
            },
        ),
        migrations.CreateModel(
            name='Teamfights',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('start_teamfight', models.IntegerField()),
                ('end_teamfight', models.IntegerField()),
                ('last_death', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.matches')),
            ],
            options={
                'db_table': 'teamfights',
            },
        ),
        migrations.CreateModel(
            name='Teamfights_players',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('buyback', models.IntegerField()),
                ('damage', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('gold_delta', models.IntegerField()),
                ('xp_start', models.IntegerField()),
                ('xp_end', models.IntegerField()),
                ('match_player_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.mp_details')),
                ('teamfight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.teamfights')),
            ],
            options={
                'db_table': 'teamfights_players',
            },
        ),
        migrations.CreateModel(
            name='Purchase_logs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('time', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.items')),
                ('match_player_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='api_v4.mp_details')),
            ],
            options={
                'db_table': 'purchase_logs',
            },
        ),
        migrations.CreateModel(
            name='Player_times',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('time', models.IntegerField()),
                ('gold', models.IntegerField()),
                ('lh', models.IntegerField()),
                ('xp', models.IntegerField()),
                ('match_player_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.mp_details')),
            ],
            options={
                'db_table': 'player_times',
            },
        ),
        migrations.CreateModel(
            name='Player_ratings',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('total_wins', models.IntegerField()),
                ('total_matches', models.IntegerField()),
                ('trueskill_mu', models.DecimalField(decimal_places=4, max_digits=15)),
                ('trueskill_sigma', models.DecimalField(decimal_places=4, max_digits=15)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.players')),
            ],
            options={
                'db_table': 'player_ratings',
            },
        ),
        migrations.CreateModel(
            name='Player_actions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('none', models.IntegerField(db_column='unit_order_none')),
                ('move_to_position', models.IntegerField(db_column='unit_order_move_to_position')),
                ('move_to_target', models.IntegerField(db_column='unit_order_move_to_target')),
                ('attack_move', models.IntegerField(db_column='unit_order_attack_move')),
                ('attack_target', models.IntegerField(db_column='unit_order_attack_target')),
                ('cast_position', models.IntegerField(db_column='unit_order_cast_position')),
                ('cast_target', models.IntegerField(db_column='unit_order_cast_target')),
                ('cast_target_tree', models.IntegerField(db_column='unit_order_cast_target_tree')),
                ('cast_no_target', models.IntegerField(db_column='unit_order_cast_no_target')),
                ('cast_toggle', models.IntegerField(db_column='unit_order_cast_toggle')),
                ('hold_position', models.IntegerField(db_column='unit_order_hold_position')),
                ('train_ability', models.IntegerField(db_column='unit_order_train_ability')),
                ('drop_item', models.IntegerField(db_column='unit_order_drop_item')),
                ('give_item', models.IntegerField(db_column='unit_order_give_item')),
                ('pickup_item', models.IntegerField(db_column='unit_order_pickup_item')),
                ('pickup_rune', models.IntegerField(db_column='unit_order_pickup_rune')),
                ('purchase_item', models.IntegerField(db_column='unit_order_purchase_item')),
                ('sell_item', models.IntegerField(db_column='unit_order_sell_item')),
                ('disassemble_item', models.IntegerField(db_column='unit_order_disassemble_item')),
                ('move_item', models.IntegerField(db_column='unit_order_move_item')),
                ('cast_toggle_auto', models.IntegerField(db_column='unit_order_cast_toggle_auto')),
                ('stop', models.IntegerField(db_column='unit_order_stop')),
                ('buyback', models.IntegerField(db_column='unit_order_buyback')),
                ('glyph', models.IntegerField(db_column='unit_order_glyph')),
                ('eject_item_from_stash', models.IntegerField(db_column='unit_order_eject_item_from_stash')),
                ('cast_rune', models.IntegerField(db_column='unit_order_cast_rune')),
                ('ping_ability', models.IntegerField(db_column='unit_order_ping_ability')),
                ('move_to_direction', models.IntegerField(db_column='unit_order_move_to_direction')),
                ('match_player_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.mp_details')),
            ],
            options={
                'db_table': 'player_actions',
            },
        ),
        migrations.CreateModel(
            name='Objectives',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('key', models.IntegerField()),
                ('subtype', models.TextField()),
                ('team', models.IntegerField()),
                ('time', models.IntegerField()),
                ('value', models.IntegerField()),
                ('slot', models.IntegerField()),
                ('match_player_detail_1', models.ForeignKey(db_column='match_player_detail_id_1', on_delete=django.db.models.deletion.CASCADE, related_name='mpd1', to='api_v4.mp_details')),
                ('match_player_detail_2', models.ForeignKey(db_column='match_player_detail_id_2', on_delete=django.db.models.deletion.CASCADE, related_name='mpd2', to='api_v4.mp_details')),
            ],
            options={
                'db_table': 'game_objectives',
            },
        ),
        migrations.AddField(
            model_name='mp_details',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.players'),
        ),
        migrations.AddField(
            model_name='matches',
            name='cluster_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.regions'),
        ),
        migrations.CreateModel(
            name='Chats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('time', models.IntegerField()),
                ('nick', models.TextField()),
                ('match_player_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.mp_details')),
            ],
            options={
                'db_table': 'chats',
            },
        ),
        migrations.CreateModel(
            name='Ability_upgrades',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('level', models.IntegerField()),
                ('time', models.IntegerField()),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v4.abilities')),
                ('match_player_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mpd', to='api_v4.mp_details')),
            ],
            options={
                'db_table': 'ability_upgrades',
            },
        ),
    ]
